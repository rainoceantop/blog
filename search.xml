<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[git的基础命令]]></title>
    <url>%2F2018%2F05%2F21%2Fgit%E7%9A%84%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[确定管理文件夹 cd进入到该文件夹 确定身份象征(提交任何修改使用)：git config --global user.name &quot;&quot; git config --global user.email &quot;&quot; 查看身份象征：git config user.namegit config user.email 初始化git管理目录：git init 查看隐藏文件：ls -a 创建文件：touch 1.py 查看git管理库状态 查看普通状态：git status 查看修改状态：git status -s 添加可提交修改（commited）文件（stage） 提交单个文件：git add 1.py 提交所有文件：git add . 撤销提交的文件：git reset 1.py 提交文件 直接提交：git commit -m &quot;提交信息&quot; 直接提交并添加：git commit -am &quot;提交信息&quot;（已经管理库有的文件，新文件无法识别到） 提交文件至上次提交的分支：git commit --amend（上次分支） --no-edit（不修改-m信息） 打印git日志 直接打印：git log 简洁打印：git log --oneline 简洁图形打印： git log --oneline --graph 查看修改信息 查看已修改未添加的修改信息：git diff 查看已添加的修改信息：git diff --cached 查看已添加再修改文件的修改信息：git diff HEAD 修改当前的头分支：git reset --hard (分支id号或HEAD指针（HEAD@{0}）) reset是在unstage和stage之间重置） 重置单个文件的内容信息：git checkout 分支id号 -- 1.py 分支 创建分支：git branch dev 或者 git checkout -b dev(创建并移动到该分支) 查看分支：git branch 切换分支：git checkout dev 删除分支：git branch -d dev 合并分支：git merge --no-ff -m &quot;合并信息&quot; dev 合并分支：git rebase dev 暂存任务 暂存当前任务：git stash 取出暂存任务：git stash pop github 建立远程连接：git remote add origin xxxxxxxxxx.git 从远程取分支的更新并与本地指定分支结合：git pull origin remotebranch:localbranch 远程分支的更新与当前分支结合：git pull origin remotebranch 将本地分支上传到远程分支：git push -u origin master 将本地分支强制上传到远程分支：git push -fu origin master（覆盖掉远程分支的所有文件）]]></content>
      <categories>
        <category>git</category>
        <category>github</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
